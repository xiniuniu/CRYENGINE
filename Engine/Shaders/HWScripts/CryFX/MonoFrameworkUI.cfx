// Copyright 2001-2019 Crytek GmbH / Crytek Group. All rights reserved.

#include "Common.cfi"
#include "VertexLib.cfi"
#include "ShadeLib.cfi"

struct v2f
{
	float4 HPosition  : SV_POSITION;   
	float4 baseTC     : TEXCOORDN;
};

v2f MonoFrameworkUIVS(app2vertGeneral IN)
{
	v2f OUT = (v2f)0; 

	// Common data
	streamPos vertPassPos = (streamPos)0;
	streamPos_FromGeneral(IN, vertPassPos);

	OUT.HPosition = Pos_VS_General(g_VS_ViewProjZeroMatr, vertPassPos);    

	OUT.baseTC = vertPassPos.baseTC;

	return OUT;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

pixout MonoFrameworkUIPS(v2f IN)
{
	pixout OUT = (pixout) 0;
	OUT.Color = GetDiffuseTex(diffuseTex, IN.baseTC.xy);
	return OUT;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

technique General
{
	pass p0
	{
		VertexShader = MonoFrameworkUIVS();
		PixelShader = MonoFrameworkUIPS();

		ZEnable = false;
		ZFunc = LEqual;
		ZWriteEnable = false;
		CullMode = Back;

		SrcBlend = SRC_ALPHA;
		DestBlend = ONE_MINUS_SRC_ALPHA;
		AlphaBlendEnable = true;
	}
}
